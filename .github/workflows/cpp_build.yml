name: C++ Build and Test

on:
  push:
    branches:
      - main
      - dev
      - feature/cpp-inference
  pull_request:
    branches:
      - main # Or 'dev'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Action to checkout the repository

    - name: Install Dependencies (CMake, build-essential)
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libssl-dev

    - name: Install OpenCV
      run: |
        sudo apt-get install -y libopencv-dev # Install OpenCV development files

    - name: Download and Setup ONNX Runtime
      run: |
        ONNX_RUNTIME_VERSION="1.17.1"
        ONNX_RUNTIME_ARCH="x64" # For Linux runner, it's x64
        ONNX_RUNTIME_URL="https://github.com/microsoft/onnxruntime/releases/download/v${ONNX_RUNTIME_VERSION}/onnxruntime-linux-${ONNX_RUNTIME_ARCH}-${ONNX_RUNTIME_VERSION}.tgz"
        mkdir -p third_party
        wget -q ${ONNX_RUNTIME_URL} -O third_party/onnxruntime.tgz
        tar -xzf third_party/onnxruntime.tgz -C third_party/ --strip-components=1 # Extract to third_party/

    # DEBUG STEP: Verify the extraction
    #- name: Verify ONNX Runtime Extraction Path
    #  run: |
    #    echo "Listing contents of third_party/:"
    #    ls -F third_party/
    #    echo ""
    #    echo "Listing contents of third_party/include/:"
    #    ls -F third_party/include/
    #    echo ""
    #    echo "Listing contents of third_party/lib/:"
    #    ls -F third_party/lib/

    - name: Configure CMake
      # Navigate to cpp directory before running cmake
      run: |
        mkdir -p src/cpp/build
        cd src/cpp/build
        cmake ..

    - name: Build C++ Executables
      run: |
        cd src/cpp/build
        make -j$(nproc) # Use all available cores for faster build
  
    # NEW DEBUG STEP: List files to find executables
    - name: Debug - Locate Built Executables
      run: |
        echo "Contents of repository root (expected bin/ directory):"
        ls -F .
        echo ""
        echo "Contents of src/cpp/ (parent of build directory):"
        ls -F src/cpp/
        echo ""
        echo "Contents of src/cpp/build/ (where make was run):"
        ls -F src/cpp/build/
        echo ""
        echo "Contents of src/cpp/build/bin/ (if executables were placed there directly):"
        ls -F src/cpp/build/bin/ || echo "src/cpp/build/bin/ not found or empty." # Handles if dir doesn't exist
        echo ""
        echo "Contents of bin/ at repo root (where CMAKE_RUNTIME_OUTPUT_DIRECTORY points):"
        ls -F bin/ || echo "bin/ at repo root not found or empty." # Handles if dir doesn't exist
    
    - name: Verify Executables (Optional)
      run: |
        # Check if the executables were created in the bin directory
        ls -l bin/lane_keeping_test_inference
        ls -l bin/lane_keeping_real_inference
        # You could also try running a dummy test
        ./bin/lane_keeping_test_inference
